name: ci-cd

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Base de données
  DB_NAME: supportdb
  DB_USER: root
  DB_PASSWORD: root
  DB_PORT: 3306

  # Auth HTTP Basic
  ADMIN_USER: admin
  ADMIN_PASSWORD: password

  # Docker Registry (exemple Docker Hub)
  DOCKER_REGISTRY: docker.io
  DOCKER_USER: mydockerid
  DOCKER_TOKEN: mydockertoken

  # SSH pour déploiement
  SSH_HOST: 203.0.113.10
  SSH_USER: ubuntu
  SSH_KEY: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    …colle ici ta clé privée PEM complète…
    -----END OPENSSH PRIVATE KEY-----

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:11.4
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        options: >-
          --health-cmd="mysqladmin ping -h localhost -p${{ env.DB_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm run lint

      - run: npm run seed
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ env.DB_PORT }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}

      - run: npm test
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ env.DB_PORT }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}

      - uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: http://localhost:3000
          wait-on-timeout: 120
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ env.DB_PORT }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USER }}/ticketing:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USER }}/ticketing:latest

            # Supprime et relance la base
            docker rm -f support-db 2>/dev/null || true
            docker run -d --name support-db \
              -e MYSQL_ROOT_PASSWORD=${{ env.DB_PASSWORD }} \
              -e MYSQL_DATABASE=${{ env.DB_NAME }} \
              mariadb:11.4

            # Supprime et relance l’API
            docker rm -f ticketing-api 2>/dev/null || true
            docker run -d --name ticketing-api \
              --network container:support-db \
              -e DB_HOST=support-db \
              -e DB_PORT=3306 \
              -e DB_USER=${{ env.DB_USER }} \
              -e DB_PASSWORD=${{ env.DB_PASSWORD }} \
              -e DB_NAME=${{ env.DB_NAME }} \
              -e ADMIN_USER=${{ env.ADMIN_USER }} \
              -e ADMIN_PASSWORD=${{ env.ADMIN_PASSWORD }} \
              -p 80:3000 \
              ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USER }}/ticketing:latest
