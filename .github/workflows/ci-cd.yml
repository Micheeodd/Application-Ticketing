name: ci-cd

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DB_NAME: supportdb
  DB_USER: root
  ADMIN_USER: admin

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:11.4
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_NAME }}
        options: >-
          --health-cmd="mysqladmin ping -h localhost -p${{ secrets.DB_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm run lint

      - run: npm run seed
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: 3306 

      - run: npm test
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: 3306

      - uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: http://localhost:3000
          wait-on-timeout: 120
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: 3306

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}    # ex. docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USER }}/ticketing:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USER }}/ticketing:latest

            docker rm -f ticketing-api support-db 2>/dev/null || true

            docker run -d --name support-db \
              -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e MYSQL_DATABASE=${{ env.DB_NAME }} \
              mariadb:11.4

            docker run -d --name ticketing-api \
              --network container:support-db \
              -e DB_HOST=support-db \
              -e DB_PORT=3306 \
              -e DB_USER=${{ env.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ env.DB_NAME }} \
              -e ADMIN_USER=${{ env.ADMIN_USER }} \
              -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
              -p 80:3000 \
              ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USER }}/ticketing:latest
